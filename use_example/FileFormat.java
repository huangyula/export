package com.obm.fa.bean;

import com.obm.fa.dao.DaoSession;
import de.greenrobot.dao.DaoException;

import android.os.Parcel;
import android.os.Parcelable;
import com.obm.fa.dao.FileFormatDao;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
// KEEP INCLUDES END
/**
 * Entity mapped to table "FILE_FORMAT".
 */
public class FileFormat implements Parcelable {

    private Long id;
    private String ctype;
    private Integer nseqno;
    private String cfieldName;
    private String cdisplayName;
    private String bdisplayflag;
    private String bDataFlag;
    private String ctitle;
    private String bimportflag;
    private Integer nimportno;
    private Integer nimportLen;
    private String bexportflag;
    private Integer nexportno;
    private Integer nexportLen;
    private String bisNumber;
    private String cCustField;
    private String cFormatStr;
    private String cOperator;
    private String creduced;

    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient FileFormatDao myDao;


    // KEEP FIELDS - put your custom fields here
    // KEEP FIELDS END

    public FileFormat() {
    }

    public FileFormat(Long id) {
        this.id = id;
    }

    public FileFormat(Long id, String ctype, Integer nseqno, String cfieldName, String cdisplayName, String bdisplayflag, String bDataFlag, String ctitle, String bimportflag, Integer nimportno, Integer nimportLen, String bexportflag, Integer nexportno, Integer nexportLen, String bisNumber, String cCustField, String cFormatStr, String cOperator, String creduced) {
        this.id = id;
        this.ctype = ctype;
        this.nseqno = nseqno;
        this.cfieldName = cfieldName;
        this.cdisplayName = cdisplayName;
        this.bdisplayflag = bdisplayflag;
        this.bDataFlag = bDataFlag;
        this.ctitle = ctitle;
        this.bimportflag = bimportflag;
        this.nimportno = nimportno;
        this.nimportLen = nimportLen;
        this.bexportflag = bexportflag;
        this.nexportno = nexportno;
        this.nexportLen = nexportLen;
        this.bisNumber = bisNumber;
        this.cCustField = cCustField;
        this.cFormatStr = cFormatStr;
        this.cOperator = cOperator;
        this.creduced = creduced;
    }

    protected FileFormat(Parcel in) {
        ctype = in.readString();
        cfieldName = in.readString();
        cdisplayName = in.readString();
        bdisplayflag = in.readString();
        bDataFlag = in.readString();
        ctitle = in.readString();
        bimportflag = in.readString();
        bexportflag = in.readString();
        bisNumber = in.readString();
        cCustField = in.readString();
        cFormatStr = in.readString();
        cOperator = in.readString();
        creduced = in.readString();
    }

    @Override
    public void writeToParcel(Parcel dest, int flags) {
        dest.writeString(ctype);
        dest.writeString(cfieldName);
        dest.writeString(cdisplayName);
        dest.writeString(bdisplayflag);
        dest.writeString(bDataFlag);
        dest.writeString(ctitle);
        dest.writeString(bimportflag);
        dest.writeString(bexportflag);
        dest.writeString(bisNumber);
        dest.writeString(cCustField);
        dest.writeString(cFormatStr);
        dest.writeString(cOperator);
        dest.writeString(creduced);
    }

    @Override
    public int describeContents() {
        return 0;
    }

    public static final Creator<FileFormat> CREATOR = new Creator<FileFormat>() {
        @Override
        public FileFormat createFromParcel(Parcel in) {
            return new FileFormat(in);
        }

        @Override
        public FileFormat[] newArray(int size) {
            return new FileFormat[size];
        }
    };

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getFileFormatDao() : null;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getCtype() {
        return ctype;
    }

    public void setCtype(String ctype) {
        this.ctype = ctype;
    }

    public Integer getNseqno() {
        return nseqno;
    }

    public void setNseqno(Integer nseqno) {
        this.nseqno = nseqno;
    }

    public String getCfieldName() {
        return cfieldName;
    }

    public void setCfieldName(String cfieldName) {
        this.cfieldName = cfieldName;
    }

    public String getCdisplayName() {
        return cdisplayName;
    }

    public void setCdisplayName(String cdisplayName) {
        this.cdisplayName = cdisplayName;
    }

    public String getBdisplayflag() {
        return bdisplayflag;
    }

    public void setBdisplayflag(String bdisplayflag) {
        this.bdisplayflag = bdisplayflag;
    }

    public String getBDataFlag() {
        return bDataFlag;
    }

    public void setBDataFlag(String bDataFlag) {
        this.bDataFlag = bDataFlag;
    }

    public String getCtitle() {
        return ctitle;
    }

    public void setCtitle(String ctitle) {
        this.ctitle = ctitle;
    }

    public String getBimportflag() {
        return bimportflag;
    }

    public void setBimportflag(String bimportflag) {
        this.bimportflag = bimportflag;
    }

    public Integer getNimportno() {
        return nimportno;
    }

    public void setNimportno(Integer nimportno) {
        this.nimportno = nimportno;
    }

    public Integer getNimportLen() {
        return nimportLen;
    }

    public void setNimportLen(Integer nimportLen) {
        this.nimportLen = nimportLen;
    }

    public String getBexportflag() {
        return bexportflag;
    }

    public void setBexportflag(String bexportflag) {
        this.bexportflag = bexportflag;
    }

    public Integer getNexportno() {
        return nexportno;
    }

    public void setNexportno(Integer nexportno) {
        this.nexportno = nexportno;
    }

    public Integer getNexportLen() {
        return nexportLen;
    }

    public void setNexportLen(Integer nexportLen) {
        this.nexportLen = nexportLen;
    }

    public String getBisNumber() {
        return bisNumber;
    }

    public void setBisNumber(String bisNumber) {
        this.bisNumber = bisNumber;
    }

    public String getCCustField() {
        return cCustField;
    }

    public void setCCustField(String cCustField) {
        this.cCustField = cCustField;
    }

    public String getCFormatStr() {
        return cFormatStr;
    }

    public void setCFormatStr(String cFormatStr) {
        this.cFormatStr = cFormatStr;
    }

    public String getCOperator() {
        return cOperator;
    }

    public void setCOperator(String cOperator) {
        this.cOperator = cOperator;
    }

    public String getCreduced() {
        return creduced;
    }

    public void setCreduced(String creduced) {
        this.creduced = creduced;
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }

    // KEEP METHODS - put your custom methods here
    // KEEP METHODS END

}
